name: "Terraform"

on:
  push:
    branches:
      - "feature/github-actions"

  pull_request:

jobs:
  terraform-kafka-aws:
    strategy:
      matrix:
        mq: [kafka, rabbitmq]
        cloud_provider: [aws, gcp]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Checkout
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'push' }}
        with:
          ref: ${{ github.ref_name }}
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
      - name: "Setup Google Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with: 
          terraform_wrapper: false
      - name: Setup python 
        uses: actions/setup-python@v3
        with:
          python-version: '3.7.9'
      - name: Install python dependencies 
        run: pip install --upgrade jsonpath-ng
      - name: Test terraform
        run: terraform -version
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: latest
      - name: Remove cache
        run: find . -type d -name ".terragrunt-cache" -prune -exec rm -rf {} \;
      - name: Test terragrunt
        run: terragrunt -version
      # - name: Terraform format
      #   env: 
      #     CLUSTER_NAME: kafka111
      #     TF_VAR_BUCKET_NAME: kafka-bucket-mqperf
      #   run: terragrunt run-all fmt -check -recursive -diff --terragrunt-working-dir terraform/live/${{matrix.mq}}/${{matrix.cloud_provider}}/ --terragrunt-non-interactive      
      # - name: Terragrunt format 
      #   run: terragrunt hclfmt --terragrunt-check
      - name: Run script plan 
        working-directory: terraform
        run: python3 script.py plan config-${{matrix.mq}}-${{matrix.cloud_provider}}.json
      - name: Enable google registry 
        run: gcloud services enable containerregistry.googleapis.com
      - name: Run script apply 
        working-directory: terraform
        run: python3 script.py apply config-${{matrix.mq}}-${{matrix.cloud_provider}}.json
      - name: Run script destroy 
        working-directory: terraform
        if: ${{ success() }}
        run: python3 script.py destroy config-${{matrix.mq}}-${{matrix.cloud_provider}}.json
